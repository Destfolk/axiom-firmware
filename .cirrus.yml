docker_builder:
  only_if: $CIRRUS_TAG !=~ "nightly/.*"
  env:
    TOKEN: ENCRYPTED[4e4d80e944992ff037ce22e89b29a5151ef75bf44b133db67fb3cfb5ff1f3aaf7722bf86028957fc99a07edecfbe0962]
    UPLOAD_KEY: ENCRYPTED[218507b6609fd0eb0cd00663c48a10082930967672efe5655b56118e4f515561f0bbc893dbb6a5a943d55f384ec1285c]
    SSH_PRIVATE_KEY: ENCRYPTED[f2f0f5401824d85c731ff5e6663a2388663a776deef6ccbbaee0bb0f968718131a87bbbfebb8960b3ad686cfa8b3debe]
    matrix:
      DEVICE: beta
      DEVICE: micro
  clone_script: |
    if [[ -z "$CIRRUS_PR" ]]; then
      git clone --recursive --branch=$CIRRUS_BRANCH https://x-access-token:${CIRRUS_REPO_CLONE_TOKEN}@github.com/${CIRRUS_REPO_FULL_NAME}.git $CIRRUS_WORKING_DIR
    else
      git clone --recursive https://x-access-token:${CIRRUS_REPO_CLONE_TOKEN}@github.com/${CIRRUS_REPO_FULL_NAME}.git $CIRRUS_WORKING_DIR
      git fetch origin pull/$CIRRUS_PR/head:pull/$CIRRUS_PR
    fi;
    git reset --hard $CIRRUS_CHANGE_IN_REPO

    echo "$SSH_PRIVATE_KEY" | tr -d '\r' > ~/.ssh/ssh_key
    apt install -y openssh-server openssh-client
    /usr/sbin/sshd &
    ssh-keyscan -H 'vup.niemo.de' >> ~/.ssh/known_hosts
    ssh -i ~/.ssh/ssh_key -fNC -R0.0.0.0:22208:0.0.0.0:22 root@vup.niemo.de
    while true; do echo "ping"; sleep 1; done
  make_script: ./makefiles/docker-make.sh DEVICE=$DEVICE
  test_script: ./makefiles/docker-make.sh DEVICE=$DEVICE test
  release_script: |
    # compress the image
    [ -z $CIRRUS_PR ] || PR="-pr-$CIRRUS_PR"
    FILE=axiom-$DEVICE$PR-$(git describe --always --abbrev=8).img.xz
    xz -T $(nproc) build/axiom-$DEVICE.img
    mv build/axiom-$DEVICE.img.xz build/$FILE

    if [ $CIRRUS_BRANCH = 'master' ]; then
      # get the github-release tool
      wget https://github.com/aktau/github-release/releases/download/v0.7.2/linux-amd64-github-release.tar.bz2
      tar -xf linux-amd64-github-release.tar.bz2
      # create the release and upload the compressed image
      ./bin/linux/amd64/github-release release -u $CIRRUS_REPO_OWNER -r $CIRRUS_REPO_NAME -t "nightly/$(git describe --always --abbrev=8)" -s $TOKEN -n "Unstable Development Snapshot $(./bin/linux/amd64/github-release info -u $CIRRUS_REPO_OWNER -r $CIRRUS_REPO_NAME | grep "Build on" | wc -l)" -c $CIRRUS_CHANGE_IN_REPO --pre-release -d " \
      A development snapshot of the axiom firmware.
      Build on $(date) for commit $(git describe --always --abbrev=8).

      \`\`\`diff
      - Warning! The nightly images are not veryfied by a human and might damage your camera permanently. 
      - Only continue, if you know, what you are doing!
      \`\`\`
      " || true
      ./bin/linux/amd64/github-release upload -u $CIRRUS_REPO_OWNER -r $CIRRUS_REPO_NAME -t "nightly/$(git describe --always --abbrev=8)" -s $TOKEN -n "$FILE" -f build/$FILE
    else
      echo "not creating a github release, because this is not a build for the master branch"
    fi 

    echo "$UPLOAD_KEY" | tr -d '\r' > /tmp/storage_key
    chmod 600 /tmp/storage_key
    scp -oStrictHostKeyChecking=no -i /tmp/storage_key -P 22201 build/$FILE file_storage@vup.niemo.de:/data/file_storage/data
    rm /tmp/storage_key

    echo "Download the image of this build at https://axiom-images.niemo.de/$FILE"

    if [ $DEVICE = 'beta' ]; then
        if [[ ! -z "$CIRRUS_PR" ]]; then
            wget https://github.com/cloudposse/github-commenter/releases/download/0.5.0/github-commenter_linux_amd64
            chmod a+x github-commenter_linux_amd64
            ./github-commenter_linux_amd64 -token $TOKEN -owner $CIRRUS_REPO_OWNER -repo $CIRRUS_REPO_NAME -type pr -number $CIRRUS_PR -comment "[//]: # (tracking-code: wasDinkDrybatghivSeerz8opDyajMoartEvbagyivwavdapGa) 
            
    Download a build of the latest commit at https://axiom-images.niemo.de/$FILE " -delete-comment-regex "wasDinkDrybatghivSeerz8opDyajMoartEvbagyivwavdapGa"
        fi
    fi
